/**

Copyright 2019 Forestry.io Inc

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.

*/
import { EditorState } from 'prosemirror-state';
import { EditorView } from 'prosemirror-view';
declare type Dispatch = typeof EditorView.prototype.dispatch;
export declare function renderLinkForm(view: EditorView, link: Element): void;
export declare function insertLinkToFile(state: EditorState, dispatch: Dispatch | null, url: string): boolean;
export declare function unmountLinkForm(view: EditorView): void;
/**
 * Sets `editing="editing"` on the link at the current cursor position
 * so that the LinkForm will be shown.
 *
 * @param {EditorState} state
 * @param {(tr: Transaction) => void} dispatch
 */
export declare function startEditingLink(state: EditorState, dispatch: Dispatch | null): boolean;
/**
 * Finds all Links in the document and makes sure they're not being edited.
 *
 * @param {EditorState} state
 * @param {(tr: Transaction) => void} dispatch
 * @returns {boolean}
 */
export declare function stopEditingLink(state: EditorState, dispatch: Dispatch | null): boolean;
/**
 * Finds the Link currently being edited and sets it's attributes.
 *
 * @param {EditorState} state
 * @param {(tr: Transaction) => void} dispatch
 * @param {Object} attrs
 */
export declare function updateLinkBeingEdited(state: EditorState, dispatch: Dispatch | null, attrs: object): boolean;
export declare function removeLinkBeingEdited(state: EditorState, dispatch: Dispatch | null): boolean;
export {};
