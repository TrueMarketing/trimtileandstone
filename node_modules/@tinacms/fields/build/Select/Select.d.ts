/**

Copyright 2019 Forestry.io Inc

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.

*/
/// <reference types="react" />
import { Props as ReactSelectProps } from 'react-select/lib/Select';
import { Props as AsyncProps } from 'react-select/lib/Async';
declare type Omit<T, K extends keyof T> = Pick<T, Exclude<keyof T, K>>;
interface Option {
    label: string;
    value: string;
}
interface SelectProps extends Omit<ReactSelectProps, 'onChange' | 'options' | 'value'> {
    value: string | number;
    options: (Option | string | number)[];
    onChange(value: string): any;
}
/**
 * `Select` is an adapter for the `react-select` library.
 *
 * This adapter changes the API in 3 ways:
 *
 * 1. It expects the `value` prop to be a `string` instead of the selected `Option`
 * 2. The `onChange` prop is passed a `string` instead of the selected `Option`
 * 3. If `value` is not a valid option, it calls `onChange` to update it immediately
 * 4. The `options` prop can contain a list of strings
 * 5. It is styled specifically for Tina
 */
export declare function Select(props: SelectProps): JSX.Element;
interface AsyncFieldProps<O> extends AsyncProps<O> {
    dynamicOptions?: boolean;
}
export declare function AsyncSelect<O = any>({ dynamicOptions, ...props }: AsyncFieldProps<O>): JSX.Element;
export { AsyncProps, SelectProps };
