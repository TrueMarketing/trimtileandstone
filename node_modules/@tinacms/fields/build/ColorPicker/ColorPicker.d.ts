/**

Copyright 2019 Forestry.io Inc

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.

*/
import * as React from 'react';
import { ColorRGBA, ColorFormat } from './color-formatter';
declare type DivProps = any;
declare type WrappedFieldProps = any;
interface SwatchProps extends DivProps {
    colorRGBA?: ColorRGBA;
    onClick(): void;
    colorFormat: ColorFormat;
}
export declare const Swatch: import("styled-components").StyledComponent<({ colorRGBA, colorFormat, unselectable, ...props }: SwatchProps) => JSX.Element, any, import("@tinacms/styles").ThemeProps, never>;
export declare const Popover: import("styled-components").StyledComponent<"div", any, {}, never>;
export declare const Cover: import("styled-components").StyledComponent<"div", any, {}, never>;
interface Props {
    colorFormat: ColorFormat;
    input: WrappedFieldProps['input'];
}
interface State {
    displayColorPicker: boolean;
}
export declare class ColorPicker extends React.Component<Props, State> {
    static defaultProps: {
        colorFormat: ColorFormat;
    };
    presetColors: string[];
    state: {
        displayColorPicker: boolean;
    };
    readonly colorFormat: string;
    handleClick: () => void;
    handleClose: () => void;
    handleChange: (pickerColor: any) => void;
    readonly colorRGBA: ColorRGBA | null;
    render(): JSX.Element;
}
export {};
