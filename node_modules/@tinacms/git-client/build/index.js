!function(t,e){"object"==typeof exports&&"undefined"!=typeof module?e(exports):"function"==typeof define&&define.amd?define(["exports"],e):e((t=t||self)["@tinacms/git-client"]={})}(this,function(t){"use strict";var e=(n.prototype.onSubmit=function(t){return this.commit(t)},n.prototype.onChange=function(t){return this.writeToDisk(t)},n.prototype.onUploadMedia=function(t){return this.writeMediaToDisk(t)},n.prototype.onDelete=function(t){return this.deleteFromDisk(t)},n.prototype.isAuthenticated=function(){return!0},n.prototype.commit=function(t){return fetch(this.baseUrl+"/commit",{method:"POST",headers:{"Content-Type":"application/json; charset=utf-8"},body:JSON.stringify(t)}).catch(function(t){console.error(t)})},n.prototype.push=function(){return fetch(this.baseUrl+"/push",{method:"POST",headers:{"Content-Type":"application/json; charset=utf-8"}}).catch(function(t){console.error(t)})},n.prototype.writeToDisk=function(t){return fetch(this.baseUrl+"/"+encodeURIComponent(t.fileRelativePath),{method:"PUT",headers:{"Content-Type":"application/json; charset=utf-8"},body:JSON.stringify(t)}).catch(function(t){console.error(t)})},n.prototype.writeMediaToDisk=function(t){var e=new FormData;return e.append("file",t.content),e.append("directory",t.directory),fetch(this.baseUrl+"/upload",{method:"POST",body:e}).catch(function(t){console.error(t)})},n.prototype.deleteFromDisk=function(t){return fetch(this.baseUrl+"/"+encodeURIComponent(t.relPath),{method:"DELETE",headers:{"Content-Type":"application/json; charset=utf-8"},body:JSON.stringify(t)}).catch(function(t){console.error(t)})},n.prototype.reset=function(t){return fetch(this.baseUrl+"/reset",{method:"POST",headers:{"Content-Type":"application/json; charset=utf-8"},body:JSON.stringify(t)})},n.prototype.show=function(t){return fetch(this.baseUrl+"/show/"+encodeURIComponent(t),{headers:{"Content-Type":"application/json; charset=utf-8"}}).then(function(t){return t.json()})},n.prototype.branch=function(t){return fetch(this.baseUrl+"/"+(t?"branches/"+t:"branch"),{headers:{"Content-Type":"application/json; charset=utf-8"}}).then(function(t){return t.json()})},n.prototype.branches=function(){return fetch(this.baseUrl+"/branches",{headers:{"Content-Type":"application/json; charset=utf-8"}}).then(function(t){return t.json()})},n);function n(t){this.baseUrl=t}t.GitClient=e,Object.defineProperty(t,"__esModule",{value:!0})});
